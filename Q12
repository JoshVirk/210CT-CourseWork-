class Node(object):#Node class

    def __init__ (self, sd, sn = None, sp = None):#Sets previous and next as none since there is nothing currently selected when starting
        self.data = sd
        self.next_node = sn#Sets nodes with variable names
        self.prev_node = sp

    def G_next (self):
        return self.next_node #Returns the next node
    
    def S_next (self, sn):
        self.next_node = sn#Selects the next node

    def G_prev (self):
        return self.prev_node#Gets the previous node

    def S_prev (self, sp):
        self.prev_node = sp# Selects previous node

    def G_data (self):
        return self.data#Gets the data currently using

    def S_data (self, sd):#Selects the data currently using
        self.data = sd

class Double_Link_List (object):

    def __init__(self, sr = None):
        self.root = sr#Gives the root and variable name and the size of it starting to 0
        self.size = 0

 def G_size (self):
        return self.size#Gets the size and returns it as the current size

    def add (self, sd):
        new_node = Node (sd, self.root)
        if self.root:#Adds a new node as it will set the root to this new node and increases the size 1
            self.root.S_prev(new_node)
        self.root = new_node
        self.size += 1

    def Remove (self, sd):
        this_node = self.root#Select the root to become the current node

        while this_node:
            if this_node.G_data() == sd:#This will take the data selected by this node
                next = this_node.G_next()
                prev = this_node.G_prev()#Also get the data that was previous and after this node

                if next:
                    next.S_prev(prev)#Will check previous
                if prev:
                    prev.S_next(next)#Will check next
                else:
                    self.root = C_node
                self.size -= 1#Reduces the size
                return True # Data removed
            else:
                this_node = this_node.G_next()
        return False  # Data not found 
